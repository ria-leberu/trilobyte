FROM ros:humble

# installing programs in a single RUN to reduce layers
RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    nano \
    vim \
    screen \
    python3-pip \
    libboost-all-dev \
    libyaml-cpp-dev \
    ros-humble-demo-nodes-cpp \
    ros-humble-ros2-control \
    ros-humble-ros2-controllers \
    ros-humble-ament-cmake-clang-format \
    ros-humble-joint-state-publisher \
    ros-humble-robot-state-publisher \
    ros-humble-navigation2 \
    ros-humble-nav2-bringup \
    ros-humble-robot-localization \
    ros-humble-slam-toolbox \
    ros-humble-xacro \
    ros-dev-tools \
    ros-humble-ament-* \
    sudo \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip and install Python requirements in one step
COPY requirements.txt ./
RUN pip install --no-cache-dir --upgrade pip \
  && pip install --no-cache-dir -r requirements.txt

# Create a non-root user and configure sudo
ARG USERNAME=ros
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME \
  && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
  && mkdir /home/$USERNAME/.config && chown $USER_UID:$USER_GID /home/$USERNAME/.config \
  && echo "$USERNAME ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/$USERNAME \
  && chmod 0440 /etc/sudoers.d/$USERNAME

# Copy ROS workspace source files before building
COPY trilobyte_base/ /home/$USERNAME/trilobyte_ws/src/trilobyte_base/
COPY trilobyte_description/ /home/$USERNAME/trilobyte_ws/src/trilobyte_description/
COPY trilobyte_hardware_interface/ /home/$USERNAME/trilobyte_ws/src/trilobyte_hardware_interface/
COPY trilobyte/ /home/$USERNAME/trilobyte_ws/src/trilobyte/
COPY ldlidar_stl_ros2/ /home/$USERNAME/trilobyte_ws/src/ldlidar_stl_ros2/

# Set up ROS2 workspace, install dependencies, and build
RUN cd /home/$USERNAME/trilobyte_ws \
    && . /opt/ros/humble/setup.sh \
    && rosdep update && rosdep install --from-paths src --ignore-src --rosdistro humble -y \
    && colcon build

# Add user to dialout group
RUN usermod -aG dialout $USERNAME

# Copy entrypoint and bashrc files
COPY entrypoint.sh /entrypoint.sh
COPY bashrc /home/$USERNAME/.bashrc

# Set ownership for the workspace and .bashrc
RUN chown -R $USER_UID:$USER_GID /home/$USERNAME/trilobyte_ws /home/$USERNAME/.bashrc

# Set entrypoint
ENTRYPOINT ["/bin/bash", "/entrypoint.sh"]
CMD ["bash"]
