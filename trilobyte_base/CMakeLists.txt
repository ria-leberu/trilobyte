cmake_minimum_required(VERSION 3.8)
project(trilobyte_base)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(ament_cmake_python REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclpy REQUIRED)
find_package(std_msgs REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

set(dependencies
  rclcpp
  std_msgs
)

include_directories(
  include
)

add_executable(mcu_data_processor src/mcu_data_processor.cpp)
ament_target_dependencies(mcu_data_processor ${dependencies})
 
# add_executable(mcu_data_processor src/minimal_cpp_subscriber.cpp)
# ament_target_dependencies(minimal_cpp_subscriber ${dependencies})
 
# Copy necessary files to designated locations in the project
# install (
#   DIRECTORY trilobyte scripts
#   DESTINATION share/${PROJECT_NAME}
# )
 
install(
  DIRECTORY include/
  DESTINATION include
)
 
# Install cpp executables
install(
  TARGETS
  mcu_data_processor
  # minimal_cpp_subscriber
  DESTINATION lib/${PROJECT_NAME}
)
 
# Install Python modules for import
# ament_python_install_package(${PROJECT_NAME})
 
# # Install Python executables
# install(
#   PROGRAMS

#   #scripts/example3.py

#   DESTINATION lib/${PROJECT_NAME}
# )


if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

# Used to export include directories of a package so that they can be easily
# included by other packages that depend on this package.
ament_export_include_directories(include)

ament_package()

